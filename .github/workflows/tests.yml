# ---
# name: Test
# on:
#   pull_request:
#   push:
#     branches:
#       - master
#       - "!gh-pages"

# env:
#   IS_CI: 'true'
#   PYTHON_VERSION: '3.8'
# jobs:
#   tests:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: ['ubuntu-latest', 'macos-latest']
#         python-version: ['3.7', '3.8', '3.9']
#         jobtype: ['testing']
#         distrib: ['included']
#         include:
#           - os: 'ubuntu-latest'
#             python-version: '3.9'
#             jobtype: 'lint'

#           - os: 'ubuntu-latest'
#             python-version: '3.9'
#             jobtype: 'coverage'

#           - os: 'ubuntu-latest'
#             python-version: '3.8'
#             distrib: 'conda'
#             jobtype: 'testing'

#           - os: 'macos-latest'
#             python-version: '3.8'
#             distrib: 'conda'
#             jobtype: 'testing'
#     env:
#       DISTRIB: ${{ matrix.distrib }}
#       JOBTYPE: ${{ matrix.jobtype }}
#     steps:
#       - name: 'Checkout repository'
#         uses: actions/checkout@v2

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Cache miniconda
#         uses: actions/cache@v2
#         if: ${{ env.DISTRIB == 'conda' }}
#         with:
#           path: ~/miniconda
#           key: ${{ runner.os }}-miniconda-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-miniconda-

#       - name: Install dependencies
#         run: |
#           /bin/bash tests/ci_install.sh
#           pip install -e .[dev]
#           pip install coveralls

#       - name: Run tests
#         run: |
#           if [[ "$JOBTYPE" == "lint" ]]; then
#             # Run flake8 via pre-commit instead.
#             #- flake8 . # Use --exit-zero to ignore failure
#             pre-commit install
#             pre-commit run --all-files
#           elif [[ "$JOBTYPE" == "coverage" ]]; then
#             pytest tests --ignore=dapper/mods/QG \
#             --cov=dapper --cov-report term-missing
#           else
#             pytest tests --ignore=dapper/mods/QG
#           fi

#       - name: Publish coverage to coveralls.io
#         if: ${{ env.JOBTYPE == 'coverage' }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: coveralls --service=github

#       - name: Cleanup
#         run: /bin/bash tests/ci_cleanup.sh
# ...
